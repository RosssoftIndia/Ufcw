using System;
using System.Linq;
using System.ServiceModel;
using System.ServiceModel.Activation;
 
using LinqToSqlReadOnly;
using Telerik.Web.UI;
 
[ServiceContract(Namespace = "")]
[AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]

public class ComboBoxWcfService : DataService< /* TODO: put your data source class name here */ >
{
    [OperationContract]
    public RadComboBoxData LoadData(RadComboBoxContext context)
    {
        //The RadComboBoxData object contains all required information for load on demand:
        // - the items
        // - are there more items in case of paging
        // - status message to be displayed (which is optional)
        RadComboBoxData result = new RadComboBoxData();
          NorthwindReadOnlyDataContext northwind = new NorthwindReadOnlyDataContext();
 
        //Get all items from the Customers table. This query will not be executed untill the ToArray method is called.
        var allCustomers = from customer in northwind.Customers
                           orderby customer.ContactName
                           select new RadComboBoxItemData
                           {
                               Text = customer.ContactName
                           };
 
 
        //In case the user typed something - filter the result set
        string text = context.Text;
        if (!String.IsNullOrEmpty(text))
        {
            allCustomers = allCustomers.Where(item => item.Text.StartsWith(text));
        }
        //Perform the paging
        // - first skip the amount of items already populated
        // - take the next 10 items
        int numberOfItems = context.NumberOfItems;
        var customers = allCustomers.Skip(numberOfItems).Take(10);
 
        //This will execute the database query and return the data as an array of RadComboBoxItemData objects
        result.Items = customers.ToArray();
 
 
        int endOffset = numberOfItems + customers.Count();
        int totalCount = allCustomers.Count();
 
        //Check if all items are populated (this is the last page)
        if (endOffset == totalCount)
            result.EndOfItems = true;
 
        //Initialize the status message
        result.Message = String.Format("Items <b>1</b>-<b>{0}</b> out of <b>{1}</b>",
                                       endOffset, totalCount);
 
        return result;
    }
}